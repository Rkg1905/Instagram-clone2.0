[{"/home/rakesh/Instagram_clone/server/client/src/index.js":"1","/home/rakesh/Instagram_clone/server/client/src/App.js":"2","/home/rakesh/Instagram_clone/server/client/src/components/Navbar.js":"3","/home/rakesh/Instagram_clone/server/client/src/components/screen/Home.js":"4","/home/rakesh/Instagram_clone/server/client/src/components/screen/Profile.js":"5","/home/rakesh/Instagram_clone/server/client/src/components/screen/Signin.js":"6","/home/rakesh/Instagram_clone/server/client/src/components/screen/Signup.js":"7","/home/rakesh/Instagram_clone/server/client/src/components/screen/CreatePost.js":"8","/home/rakesh/Instagram_clone/server/client/src/components/screen/UserPorfile.js":"9","/home/rakesh/Instagram_clone/server/client/src/components/screen/SubscribesUserPosts.js":"10","/home/rakesh/Instagram_clone/server/client/src/reducers/userReducer.js":"11","/home/rakesh/Instagram_clone/server/client/src/components/screen/Reset.js":"12","/home/rakesh/Instagram_clone/server/client/src/components/screen/NewPassword.js":"13"},{"size":406,"mtime":1608732862408,"results":"14","hashOfConfig":"15"},{"size":1989,"mtime":1609154428599,"results":"16","hashOfConfig":"15"},{"size":1296,"mtime":1608895254860,"results":"17","hashOfConfig":"15"},{"size":5667,"mtime":1608894226098,"results":"18","hashOfConfig":"15"},{"size":4073,"mtime":1608976552223,"results":"19","hashOfConfig":"15"},{"size":2044,"mtime":1609155111384,"results":"20","hashOfConfig":"15"},{"size":3271,"mtime":1608908715422,"results":"21","hashOfConfig":"15"},{"size":2640,"mtime":1608792529165,"results":"22","hashOfConfig":"15"},{"size":4625,"mtime":1608908385132,"results":"23","hashOfConfig":"15"},{"size":5670,"mtime":1608899837938,"results":"24","hashOfConfig":"15"},{"size":515,"mtime":1608972549239,"results":"25","hashOfConfig":"15"},{"size":1323,"mtime":1609153088510,"results":"26","hashOfConfig":"15"},{"size":1483,"mtime":1609154928835,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1dqv13a",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rakesh/Instagram_clone/server/client/src/index.js",[],["63","64"],"/home/rakesh/Instagram_clone/server/client/src/App.js",["65","66"],"/home/rakesh/Instagram_clone/server/client/src/components/Navbar.js",["67"],"import React, { useEffect,useContext } from 'react';\nimport {Link,useHistory} from 'react-router-dom'\nimport { UserContext } from '../App';\nconst NavBar=()=>{\n    const {state,dispatch}=useContext(UserContext)\n    const history=useHistory()\n    const renderList=()=>{\n\n        if(state){\n            return[\n                <li><Link to=\"/myfollowingpost\">following posts</Link></li>,\n                <li><Link to=\"/profile\">Profile</Link></li>,\n                <li><Link to=\"/createpost\">Create Post</Link></li>,\n                <li><button className=\"btn blue\" \n                    onClick={()=>{localStorage.clear()\n                    dispatch({type:\"CLEAR\"}); history.push('/singin')}} >Logout</button>                   \n                </li>\n            ]\n        }\n        else{\n            return[\n                <li><Link to=\"/signin\">signin</Link></li>,\n                <li><Link to=\"/signup\">signup</Link></li>\n            ]\n        }\n    }\n\n    return (\n        <nav>\n            <div className=\"nav-wrapper white\">\n            <Link to={state?\"/\":\"/signin\"} className=\"brand-logo left\">instagram</Link>\n            <ul id=\"nav-mobile\" className=\"right\">\n                {renderList()}              \n            </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default NavBar","/home/rakesh/Instagram_clone/server/client/src/components/screen/Home.js",["68","69","70"],"import React, {useState,useEffect, useContext } from 'react'\nimport { UserContext } from '../../App'\nimport { Link } from \"react-router-dom\";\n\nconst Home=()=>{\n    const [data,setData]= useState([])\n    const {state,dispatch}=useContext(UserContext)\n    useEffect(()=>{\n        fetch('/allpost',{\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result.posts)\n            setData(result.posts)\n        })\n    },[])\n\n    const likePost=(id)=>{\n        fetch('/like',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n            }).then(res=>res.json())\n            .then(result=>{\n                // console.log(result)\n                const newData=data.map(item=>{\n                    if(item._id===result._id){\n                        return result\n                    }\n                    else{\n                        return item\n                    }\n                })\n                setData(newData)\n        })\n    }\n\n    \n    const unlikePost=(id)=>{\n        fetch('/unlike',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n            }).then(res=>res.json())\n            .then(result=>{\n                // console.log(result)\n                const newData=data.map(item=>{\n                    if(item._id===result._id){\n                        return result\n                    }\n                    else{\n                        return item\n                    }\n                })\n                setData(newData)\n            })\n    }\n    const makecomment=(text,postId)=>{\n        fetch('/comment',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId,\n                text\n            })\n            }).then(res=>res.json())\n            .then(result=>{\n                // console.log(result)\n                const newData=data.map(item=>{\n                    if(item._id===result._id){\n                        return result\n                    }\n                    else{\n                        return item\n                    }\n                })\n                setData(newData)\n        })\n    }\n\n    const deletePost=(postId)=>{\n        fetch(`/deletepost/${postId}`,{\n            method:\"delete\",\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            const newData=data.filter(item=>{\n                return item._id !==result._id\n            })\n            setData(newData)\n        })\n    }\n    return (\n        <div className=\"home\">\n            {\n                data.map(item=>{\n                    return(\n                        <div className=\"card home-card\" key={item._id} style={{padding:\"6px\"}}>\n                            \n                            <h5 className=\"postProfile\"> <Link to={ item.postedBy._id!==state._id?\"/profile/\"+item.postedBy._id : \"/profile\"}>{item.postedBy.name} </Link>{item.postedBy._id==state._id\n                            && <i className=\"material-icons\" style={{float:\"right\"}} \n                            onClick={()=>deletePost(item._id)}>delete</i>}</h5>\n                            <div className=\"card-image\">\n                                <img alt=\"photo\" src={item.photo} />\n                            </div>\n                            <div className=\"card-content\">\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\n                            {item.likes.includes(state._id)\n                            ?\n                            <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>\n                            :\n                            <i className=\"material-icons\" onClick={()=>{likePost(item._id)}}>thumb_up</i>\n                            }\n                                <h6>{item.likes.length} likes</h6>\n                                <h6> {item.title}</h6>\n                                <p> {item.body}</p>\n                                {\n                                    item.comments.map(record=>{\n                                        return(\n                                            <h6><span key={record._id}style={{fontweight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e)=>{\n                                    e.preventDefault()\n                                    makecomment(e.target[0].value,item._id)\n                                }}>\n                                    <input type=\"text\" placeholder=\" add a comment\"/>\n                                </form>\n                                \n                            </div>\n\n                        </div>\n                    )\n                })\n            }\n            \n            \n        </div>\n        \n    )\n}\n\nexport default Home","/home/rakesh/Instagram_clone/server/client/src/components/screen/Profile.js",["71","72"],"import React, { useEffect, useState ,useContext} from 'react'\nimport { UserContext } from '../../App'\n\nconst Profile=()=>{\n    const [mypics,setPics]=useState([])\n    const [image,setImage]= useState(\"\")\n    const {state,dispatch}=useContext(UserContext);\n    useEffect(()=>{\n        fetch('/mypost',{\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            setPics(result.mypost)\n        })\n    },[])\n\n    useEffect(()=>{\n        if(image){\n            const data=new FormData()\n            data.append(\"file\",image)\n            data.append(\"upload_preset\",\"insta-clone\")\n            data.append(\"cloud_name\",\"rkg1905\")\n            fetch(\"https://api.cloudinary.com/v1_1/rkg1905/image/upload\",{\n                method:\"post\",\n                body:data\n            })\n            .then(res=>res.json())\n            .then(data=>{\n                    // localStorage.setItem(\"user\",JSON.stringify({...state,pic:data.url}))\n                    // dispatch({type:\"UPDATEPIC\",payload:data.url})\n                fetch('/updatepic',{\n                    method:\"put\",\n                    headers:{\n                        \"Content-Type\":\"application/json\",\n                        \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n                    },\n                    body:JSON.stringify({\n                        pic:data.url\n                    })\n                }).then(res=>res.json())\n                .then(result=>{\n                    localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\n                    dispatch({type:\"UPDATEPIC\",payload:result.pic})\n                })\n                // window.location.reload()\n            }).catch(err=>{\n                console.log(err)\n            })\n            \n        }\n\n   },[image])\n    const UpdatePhoto=(file)=>{\n        setImage(file)\n        \n    }\n    return (\n        <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\n            <div style={{margin:\"18px 0px 0px\",\n                    borderBottom:\"1px solid grey\"}}>\n                <div style={{\n                    display:\"flex\",\n                    justifyContent:\"space-around\",\n                    margin:\"10px 0px\",\n                    }}>\n                    <div>\n                        <img style={{width:\"160px\", height:\"160px\",borderRadius:\"80px\"}}\n                        src={state?state.pic:\"loading\"}/>\n                    </div>\n                    \n                    <div>\n                        <h4 >{state?state.name:\"loading\"}</h4>\n                        <div style={{display:\"flex\", justifyContent:\"space-around\", width:\"108%\"}}>\n                            <h6>{mypics.length?mypics.length:0} posts</h6>\n                            <h6>{state.followers.length?state.followers.length:0} followers</h6>\n                            <h6>{state.following.length?state.following.length:0} following</h6>\n                        </div>\n                        \n                    </div >\n                    \n                </div>\n                <div>\n                <div className=\"file-field input-field\">\n                    <div className=\"btn #42a5f5 blue darken-1\">\n                        <span>Upload pic</span>\n                        <input type=\"file\" onChange={(e)=>UpdatePhoto(e.target.files[0])}/>\n                    </div>\n                    <div className=\"file-path-wrapper \">\n                            <input className=\"file-path validate\" type=\"text\"/>\n                    </div>\n                    </div>\n                </div>\n            </div>\n            \n                <div className=\"gallery\">\n                    { mypics.map(item =>{\n                        return (\n                            <img key={item._id}className=\"item\" src={item.photo} alt=\"posts\"/>\n                        )\n                    })\n                    }\n                    \n                </div>\n        </div>\n    )\n}\n\nexport default Profile","/home/rakesh/Instagram_clone/server/client/src/components/screen/Signin.js",["73"],"/home/rakesh/Instagram_clone/server/client/src/components/screen/Signup.js",["74"],"import React,{useEffect, useState} from 'react'\nimport {Link,useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\n\nconst Signup=()=>{\n    const history=useHistory()\n    const [name,setName]=useState(\"\")\n    const [email,setEmail]=useState(\"\")\n    const [password,setPassword]=useState(\"\")\n    const [image,setImage]= useState(\"\")\n    const [url,setUrl]=useState(undefined)\n\n    useEffect(()=>{\n        if(url){\n            uploadFields()\n        }\n    },[url])\n\n    const uploadPic=()=>{\n        const data=new FormData()\n        data.append(\"file\",image)\n        data.append(\"upload_preset\",\"insta-clone\")\n        data.append(\"cloud_name\",\"rkg1905\")\n        fetch(\"https://api.cloudinary.com/v1_1/rkg1905/image/upload\",{\n            method:\"post\",\n            body:data\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            setUrl(data.url)\n\n        }).catch(err=>{\n            console.log(err)\n        })\n\n    }\n\n    const uploadFields=()=>{\n        if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)){\n            M.toast({html:\"invalid email\",classes:\"#b71c1c red darken-4\"})\n            return\n        }\n        fetch(\"/signup\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                name:name,\n                email:email,\n                password:password,\n                pic:url\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n            if(data.error){\n                M.toast({html:data.error,classes:\"#b71c1c red darken-4\"})\n            }\n            else{\n                M.toast({html:data.message,classes:\"#b71c1c green darken-4\"})\n                history.push('/signin')\n            }\n        }).catch(err=>{\n            console.log(err)\n        })\n        \n    }\n    const PostData=()=>{\n        if(image){\n            uploadPic()\n        }\n        else{\n            uploadFields()\n        }\n\n    }\n\n    return (\n        <div>\n            <div className=\"card auth-card\">\n                <h2>Instagram</h2>\n                <input type=\"text\" placeholder=\"username\" value={name} onChange={(e)=>setName(e.target.value)} />\n                <input type=\"text\" placeholder=\"email\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\n                <input type=\"password\" placeholder=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\n                <div className=\"file-field input-field\">\n                <div className=\"btn #42a5f5 blue darken-1\">\n                    <span>Upload pic</span>\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\n                </div>\n                <div className=\"file-path-wrapper \">\n                        <input className=\"file-path validate\" type=\"text\"/>\n                </div>\n                </div>\n                <button className=\"btn waves-effect waves-light #42a5f5 blue darken-1\" onClick={()=>PostData()}>\n                    Signup\n                </button>\n                <h5>\n                    <Link to=\"/signin\">Already have an account</Link>\n                </h5>\n            </div>\n\n        </div>\n    )\n};\n\nexport default Signup","/home/rakesh/Instagram_clone/server/client/src/components/screen/CreatePost.js",["75"],"import React,{useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\n\n\nconst CreatePost = ()=>{\n    const history=useHistory();\n    const[title,setTitle]=useState(\"\");\n    const[body,setBody]=useState(\"\");\n    const[image,setImage]=useState(\"\");\n    const[url,setUrl]=useState(\"\");\n    React.useEffect(()=>{\n        if(url){\n            fetch(\"/createpost\",{\n                method:\"post\",\n                headers:{\n                    \"Content-Type\":\"application/json\",\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n                },\n                body:JSON.stringify({\n                    title,\n                    body,\n                    image:url\n                })\n            }).then(res=>res.json())\n            .then(data=>{\n                console.log(data)\n                if(data.error){\n                    M.toast({html:data.error,classes:\"#b71c1c red darken-4\"})\n                }\n                else{\n                    M.toast({html:\"created post\",classes:\"#b71c1c green darken-4\"})\n                    history.push('/')\n                }\n            }).catch(err=>{\n                console.log(err)\n            })\n        }\n    },[url])\n\n    const postDetails=()=>{\n        const data=new FormData()\n        data.append(\"file\",image)\n        data.append(\"upload_preset\",\"insta-clone\")\n        data.append(\"cloud_name\",\"rkg1905\")\n        fetch(\"https://api.cloudinary.com/v1_1/rkg1905/image/upload\",{\n            method:\"post\",\n            body:data\n        })\n        .then(res=>res.json())\n        .then(data=>{\n            setUrl(data.url)\n\n        }).catch(err=>{\n            console.log(err)\n        })\n\n    }\n\n\n    return(\n        <div className=\"card input-field\">\n            <input type=\"text\"  placeholder=\"title\" value={title} onChange={(e)=>setTitle(e.target.value)}/>\n            <input type=\"text\" placeholder=\"body\"value={body} onChange={(e)=>setBody(e.target.value)}/>\n            <div className=\"file-field input-field\">\n                <div className=\"btn #42a5f5 blue darken-1\">\n                    <span>Upload Image</span>\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\n                </div>\n                <div className=\"file-path-wrapper \">\n                        <input className=\"file-path validate\" type=\"text\"/>\n                </div>\n                <button className=\"btn waves-effect waves-light #42a5f5 blue darken-1\" onClick={()=>postDetails()}>\n                    Post it!\n                </button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default CreatePost","/home/rakesh/Instagram_clone/server/client/src/components/screen/UserPorfile.js",["76","77"],"import React, { useEffect, useState ,useContext} from 'react'\nimport { useParams } from 'react-router-dom';\nimport { UserContext } from '../../App'\n\nconst Profile=()=>{\n    const [userProfile,setProfile]=useState(\"\")\n    const {state,dispatch}=useContext(UserContext);\n    const {userid}=useParams()\n    const [showfollow,setShowFollow]=useState(state?!state.following.includes(userid):true)\n\n    console.log(userid)\n    useEffect(()=>{\n        fetch(`/user/${userid}`,{\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            setProfile(result)\n        })\n    },[])\n\n    const followUser=()=>{\n        fetch('/follow',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },body:JSON.stringify({\n                followId:userid\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n            console.log(data)\n            dispatch({type:\"UPDATE\",payload:{following:data.following, followers:data.followers}})\n            localStorage.setItem(\"user\",JSON.stringify(data))\n            setProfile((prevState)=>{\n                return {\n                    ...prevState,\n                    user:{\n                        ...prevState.user,\n                        followers:[...prevState.user.followers,data._id]\n                    }\n                }\n            })\n            setShowFollow(false)\n            \n        })\n    }\n\n    const unfollowUser=()=>{\n        fetch('/unfollow',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },body:JSON.stringify({\n                unfollowId:userid\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n            console.log(data)\n            dispatch({type:\"UPDATE\",payload:{following:data.following, followers:data.followers}})\n            localStorage.setItem(\"user\",JSON.stringify(data))\n            setProfile((prevState)=>{\n                const newFollower=prevState.user.followers.filter(item=>item!==data._id)\n                return {\n                    ...prevState,\n                    user:{\n                        ...prevState.user,\n                        followers:newFollower\n                    }\n                }\n            })\n            setShowFollow(true)\n            \n        })\n    }\n    return (\n        <>\n        {userProfile?\n            <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\n            <div style={{\n                display:\"flex\",\n                justifyContent:\"space-around\",\n                margin:\"18px 0px\",\n                borderBottom:\"1px solid grey\"\n            }}>\n                <div>\n                    <img style={{width:\"160px\", height:\"160px\",borderRadius:\"80px\"}}\n                    src={userProfile.user.pic}/>\n                </div>\n                <div>\n                    <h4>{userProfile.user?userProfile.user.name:\"loading\"}</h4>\n                    <h5>{userProfile.user?userProfile.user.email:\"loading\"}</h5>\n                    <div style={{display:\"flex\", justifyContent:\"space-around\", width:\"108%\"}}>\n                        <h6>{userProfile.posts.length} posts</h6>\n                        <h6>{userProfile.user.followers.length} followers</h6>\n                        <h6>{userProfile.user.following.length} following</h6>\n                    </div>\n                    {showfollow?\n                    <button className=\"btn #42a5f5 blue darken-1\" style={{margin:\"10px\"}} onClick={()=>followUser()}>\n                    follow\n                    </button>\n                    :\n                    <button className=\"btn #42a5f5 blue darken-1\" style={{margin:\"10px\"}} onClick={()=>unfollowUser()}>\n                    unfollow\n                    </button>\n                    }\n                    \n                    \n                    \n                </div >\n                \n            </div>\n                <div className=\"gallery\">\n                    { userProfile.posts.map(item =>{\n                        return (\n                            <img key={item._id}className=\"item\" src={item.photo} alt=\"posts\"/>\n                        )\n                    })\n                    }\n                    \n                </div>\n        </div>\n        \n        :<h3>loading...?</h3>}\n        \n        </>\n    )\n}\n\nexport default Profile","/home/rakesh/Instagram_clone/server/client/src/components/screen/SubscribesUserPosts.js",["78","79","80"],"import React, {useState,useEffect, useContext } from 'react'\nimport { UserContext } from '../../App'\nimport { Link } from \"react-router-dom\";\n\nconst Home=()=>{\n    const [data,setData]= useState([])\n    const {state,dispatch}=useContext(UserContext)\n    useEffect(()=>{\n        fetch('/getsubpost',{\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result.posts)\n            setData(result.posts)\n        })\n    },[])\n\n    const likePost=(id)=>{\n        fetch('/like',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n            }).then(res=>res.json())\n            .then(result=>{\n                // console.log(result)\n                const newData=data.map(item=>{\n                    if(item._id===result._id){\n                        return result\n                    }\n                    else{\n                        return item\n                    }\n                })\n                setData(newData)\n        })\n    }\n\n    \n    const unlikePost=(id)=>{\n        fetch('/unlike',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n            }).then(res=>res.json())\n            .then(result=>{\n                // console.log(result)\n                const newData=data.map(item=>{\n                    if(item._id===result._id){\n                        return result\n                    }\n                    else{\n                        return item\n                    }\n                })\n                setData(newData)\n            })\n    }\n    const makecomment=(text,postId)=>{\n        fetch('/comment',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId,\n                text\n            })\n            }).then(res=>res.json())\n            .then(result=>{\n                // console.log(result)\n                const newData=data.map(item=>{\n                    if(item._id===result._id){\n                        return result\n                    }\n                    else{\n                        return item\n                    }\n                })\n                setData(newData)\n        })\n    }\n\n    const deletePost=(postId)=>{\n        fetch(`/deletepost/${postId}`,{\n            method:\"delete\",\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            const newData=data.filter(item=>{\n                return item._id !==result._id\n            })\n            setData(newData)\n        })\n    }\n    return (\n        <div className=\"home\">\n            {\n                data.map(item=>{\n                    return(\n                        <div className=\"card home-card\" key={item._id} style={{padding:\"6px\"}}>\n                            \n                            <h5 className=\"postProfile\"> <Link to={ item.postedBy._id!==state._id?\"/profile/\"+item.postedBy._id : \"/profile\"}>{item.postedBy.name} </Link>{item.postedBy._id==state._id\n                            && <i className=\"material-icons\" style={{float:\"right\"}} \n                            onClick={()=>deletePost(item._id)}>delete</i>}</h5>\n                            <div className=\"card-image\">\n                                <img alt=\"photo\" src={item.photo} />\n                            </div>\n                            <div className=\"card-content\">\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\n                            {item.likes.includes(state._id)\n                            ?\n                            <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>\n                            :\n                            <i className=\"material-icons\" onClick={()=>{likePost(item._id)}}>thumb_up</i>\n                            }\n                                <h6>{item.likes.length} likes</h6>\n                                <h6> {item.title}</h6>\n                                <p> {item.body}</p>\n                                {\n                                    item.comments.map(record=>{\n                                        return(\n                                            <h6><span key={record._id}style={{fontweight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e)=>{\n                                    e.preventDefault()\n                                    makecomment(e.target[0].value,item._id)\n                                }}>\n                                    <input type=\"text\" placeholder=\" add a comment\"/>\n                                </form>\n                                \n                            </div>\n\n                        </div>\n                    )\n                })\n            }\n            \n            \n        </div>\n        \n    )\n}\n\nexport default Home","/home/rakesh/Instagram_clone/server/client/src/reducers/userReducer.js",[],"/home/rakesh/Instagram_clone/server/client/src/components/screen/Reset.js",["81","82"],"import React, {useState,useContext} from 'react'\nimport {Link,useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\n\nconst Reset=()=>{\n    const history=useHistory()\n    const [email,setEmail]=useState(\"\")\n\n    const PostData=()=>{\n        fetch(\"/reset-password\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                email:email,\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n            if(data.error){\n                M.toast({html:data.error,classes:\"#b71c1c red darken-4\"})\n            }\n            else{\n\n                M.toast({html:data.message,classes:\"#b71c1c green darken-4\"})\n                history.push('/signin')\n            }\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    return (\n        <div>\n            <div className=\"card auth-card\">\n                <h2>Instagram</h2>\n                <input type=\"text\" placeholder=\"email\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\n                <button className=\"btn waves-effect waves-light #42a5f5 blue darken-1\" onClick={()=>PostData()}>\n                    Reset password\n                </button>\n            </div>\n\n        </div>\n    )\n};\n\nexport default Reset","/home/rakesh/Instagram_clone/server/client/src/components/screen/NewPassword.js",["83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":21,"column":10,"nodeType":"91","messageId":"92","endLine":21,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":31,"column":5,"nodeType":"95","endLine":31,"endColumn":7,"suggestions":"96"},{"ruleId":"89","severity":1,"message":"97","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"98","line":7,"column":18,"nodeType":"91","messageId":"92","endLine":7,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":118,"column":189,"nodeType":"101","messageId":"102","endLine":118,"endColumn":191},{"ruleId":"103","severity":1,"message":"104","line":122,"column":33,"nodeType":"105","endLine":122,"endColumn":69},{"ruleId":"93","severity":1,"message":"106","line":55,"column":6,"nodeType":"95","endLine":55,"endColumn":13,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":70,"column":25,"nodeType":"105","endLine":71,"endColumn":58},{"ruleId":"89","severity":1,"message":"90","line":7,"column":12,"nodeType":"91","messageId":"92","endLine":7,"endColumn":17},{"ruleId":"93","severity":1,"message":"110","line":17,"column":7,"nodeType":"95","endLine":17,"endColumn":12,"suggestions":"111"},{"ruleId":"93","severity":1,"message":"112","line":39,"column":7,"nodeType":"95","endLine":39,"endColumn":12,"suggestions":"113"},{"ruleId":"93","severity":1,"message":"114","line":22,"column":7,"nodeType":"95","endLine":22,"endColumn":9,"suggestions":"115"},{"ruleId":"108","severity":1,"message":"109","line":91,"column":21,"nodeType":"105","endLine":92,"endColumn":49},{"ruleId":"89","severity":1,"message":"98","line":7,"column":18,"nodeType":"91","messageId":"92","endLine":7,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":118,"column":189,"nodeType":"101","messageId":"102","endLine":118,"endColumn":191},{"ruleId":"103","severity":1,"message":"104","line":122,"column":33,"nodeType":"105","endLine":122,"endColumn":69},{"ruleId":"89","severity":1,"message":"116","line":1,"column":25,"nodeType":"91","messageId":"92","endLine":1,"endColumn":35},{"ruleId":"89","severity":1,"message":"117","line":2,"column":9,"nodeType":"91","messageId":"92","endLine":2,"endColumn":13},{"ruleId":"89","severity":1,"message":"116","line":1,"column":25,"nodeType":"91","messageId":"92","endLine":1,"endColumn":35},{"ruleId":"89","severity":1,"message":"117","line":2,"column":9,"nodeType":"91","messageId":"92","endLine":2,"endColumn":13},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["120"],"'useEffect' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["121"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["122"],"React Hook React.useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["123"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["124"],"'useContext' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [dispatch, history]",{"range":"135","text":"136"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"137","text":"138"},"Update the dependencies array to be: [uploadFields, url]",{"range":"139","text":"140"},"Update the dependencies array to be: [body, history, title, url]",{"range":"141","text":"142"},"Update the dependencies array to be: [userid]",{"range":"143","text":"144"},[1145,1147],"[dispatch, history]",[1904,1911],"[dispatch, image, state]",[469,474],"[uploadFields, url]",[1227,1232],"[body, history, title, url]",[714,716],"[userid]"]